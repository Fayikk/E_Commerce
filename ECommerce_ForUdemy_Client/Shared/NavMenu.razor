@using Blazored.LocalStorage;
@using ECommerce_ForUdemy_Client.Service.IService;
@using ECommerce_ForUdemy_Client.ViewModels;
@using ECommerce_ForUdemy_Models;
@using E_CommerceForUdemy_Common;
@inject IProductService _productService
@inject ICategoryService _categoryService
@inject ISyncLocalStorageService _localStorage
@inject ICartService _cartService
@implements IDisposable


<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Adventures</a>
        @foreach (var item in Categories)
        {
            <a class="navbar-brand" href="category/product/@item.Id">@item.Name</a>

        }
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        
          <li class="nav-item p-0">
        <NavLink style="color:white"  class="nav-link" href="/cart">
                            <span class="p-2">
                                <i class="bi bi-cart"></i> (@GetCartCount())
                            </span>
        </NavLink>
        </li>
      </ul>
      <form class="d-flex">
          <ul class="navbar-nav">

             <AuthorizeView>
                 <Authorized>
                       <li class="nav-item p-0">
                        <NavLink class="nav-link" href="#">
                            <span class="p-2">
                                Hello, @context.User.Identity.Name
                            </span>
                        </NavLink>
                    </li>
                    <li class="nav-item p-0">
                        <NavLink class="nav-link" href="logout">
                            <span class="p-2">
                                Logout
                            </span>
                        </NavLink>
                    </li>
                 </Authorized>
                <NotAuthorized>
                            <li class="nav-item p-0">
                                <NavLink class="nav-link" href="register">
                                    <span class="p-2">
                                        Register
                                    </span>
                                </NavLink>
                            </li>
                            <li class="nav-item p-0">
                                <NavLink class="nav-link" href="login">
                                    <span class="p-2">
                                        Login
                                    </span>
                                </NavLink>
                            </li>
                </NotAuthorized>
             </AuthorizeView>
                     
                     
             
          </ul>
      </form>
    </div>
  </div>
</nav>

@code {
    public IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await _categoryService.GetCategoriesAsync();
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }


    private int GetCartCount()
    {
        var cart = _localStorage.GetItem<List<ShoppingCart>>(Keys.ShoppingCart);
        return cart == null ? 0 : cart.Count;

    }

}
