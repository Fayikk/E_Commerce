@page "/details/{ProductId:int}"
@using ECommerce_ForUdemy_Client.Service.IService;
@using ECommerce_ForUdemy_Client.ViewModels;
@using ECommerce_ForUdemy_Models;
@inject IProductService _productService
<head>
    <title>Ürün Detay Sayfası</title>
</head>

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px">
        <img src="images/loading.gif" />

    </div>
}
else
{
    <EditForm OnValidSubmit="AddToCart" Model="DetailsVM" method="post">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div style="display: flex; justify-content: center; align-items: center; padding: 20px; background-color: #f5f5f5; border: 1px solid #ddd; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);">
            <img style="width: 300px; height: auto; margin-right: 20px;" src="@Product.ImageUrl" alt="Ürün Resmi" />

            <div style="max-width: 500px;">
                <h1 style="font-size: 32px; font-weight: bold; margin-bottom: 10px;">@Product.Name</h1>
                <p style="font-size: 18px; margin-bottom: 20px;">@Product.Description</p>
                <div class="row">
                    @foreach (var item in Product.ProductPrices)
                    {

                        if (item.Id == DetailsVM.SelectedProductPriceId)
                        {
                            //this product is selected by user
                            <div class="col-2 bg-light text-center pt-2 m-2" style="border:3px solid #28A745; border-radius:10px;box-shadow:5px">
                                <p>@item.Publisher</p>
                                <p>@item.Price.ToString("c")</p>
                            </div>
                        }
                        else
                        {
                            //all other products
                            <div class="col-2 bg-light text-center pt-2 m-2" style="border:1px solid; border-radius:10px;box-shadow:5px"
                     @onclick="(args)=>SelectedProductPrice(args,item.Id)">
                                <p>@item.Publisher</p>
                                <p>@item.Price.ToString("c")</p>
                            </div>
                        }
                    }
                    @if (!Product.ProductPrices.Any())
                    {
                        <p class="text-warning">No Publisher Availeble Yet</p>
                    }
                    else
                    {
                        <div class="row pl-2">
                            <div class="col-2 text-primary"><h4>Count</h4></div>
                            <div class="col-10">
                                <InputNumber @bind-Value="DetailsVM.Count" class="form-control" />
                                <ValidationMessage For="()=>DetailsVM.Count" ></ValidationMessage>
                            </div>
                        </div>
                    }
                 
                </div>
                <div style="display: flex; justify-content: space-between; margin-bottom: 20px;">
                    <p style="font-size: 24px; font-weight: bold;">Ürün Fiyatı: $50.00</p>
                    <p style="font-size: 18px; color: green; font-weight: bold;">Stok Durumu: Stokta Var</p>
                </div>
                @if (DetailsVM.SelectedProductPriceId > 0)
                {
                    <button style="padding: 10px 20px; border: none; background-color: #0066cc; color: #fff; font-size: 18px; cursor: pointer;">Sepete Ekle</button>

                }
                else
                {
                    <button disabled style="padding: 10px 20px; border: none; background-color: #0066cc; color: #fff; font-size: 18px; cursor: pointer;">Sepete Ekle</button>

                }
            </div>
        </div>
    </EditForm>
   

}


 
 
  

@code {
    [Parameter]
    public int ProductId { get; set; }
    public ProductDTO? Product { get; set; } = new();
    public bool IsProcessing { get; set; } = false;
    public DetailsVM DetailsVM { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Product = await _productService.Get(ProductId);
        IsProcessing = false;
    }
    private async Task SelectedProductPrice(MouseEventArgs e, int productPriceId)
    {
        DetailsVM.ProductPrice = Product.ProductPrices.FirstOrDefault(u => u.Id == productPriceId);
        DetailsVM.SelectedProductPriceId = productPriceId;
    }

    private async Task AddToCart()
    {
        
    }
}
